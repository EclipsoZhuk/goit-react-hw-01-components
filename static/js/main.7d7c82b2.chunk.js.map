{"version":3,"sources":["components/profile/profile.module.css","components/statistics/statistics.module.css","components/profile/Profile.js","components/statistics/Statistics.js","components/friendList/FriendList.js","App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","followers","views","likes","className","s","profile","description","src","alt","statsItem","label","quantity","defaultProps","Statistics","title","statistics","toUpperCase","statList","map","value","id","percentage","item","style","backgroundColor","FriendList","prop","App","user","statisticalData","friends","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,MAAQ,uBAAuB,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,UAAY,2BAA2B,YAAc,6BAA6B,MAAQ,uBAAuB,SAAW,4B,gBCAxZD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,SAAW,6BAA6B,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,gvCCExM,SAASC,EAAT,GAMX,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,IACAC,EAGD,EAHCA,SACAC,EAED,EAFCA,OAED,IADCC,MAASC,EACV,EADUA,UAAWC,EACrB,EADqBA,MAAOC,EAC5B,EAD4BA,MAE3B,OACI,sBAAKC,UAAWC,IAAEC,QAAlB,UACI,sBAAKF,UAAWC,IAAEE,YAAlB,UACI,qBAAKC,IAAKT,EAAQU,IAAKb,EAAMQ,UAAWC,IAAEN,SAC1C,mBAAGK,UAAWC,IAAET,KAAhB,SAAuBA,IACvB,oBAAGQ,UAAWC,IAAER,IAAhB,cAAuBA,KACvB,mBAAGO,UAAWC,IAAEP,SAAhB,SAA2BA,OAG/B,qBAAIM,UAAWC,IAAEL,MAAjB,UACI,qBAAII,UAAWC,IAAEK,UAAjB,UACI,sBAAMN,UAAWC,IAAEM,MAAnB,uBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BX,OAElC,qBAAIG,UAAWC,IAAEK,UAAjB,UACI,sBAAMN,UAAWC,IAAEM,MAAnB,mBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BV,OAElC,qBAAIE,UAAWC,IAAEK,UAAjB,UACI,sBAAMN,UAAWC,IAAEM,MAAnB,mBACA,sBAAMP,UAAWC,IAAEO,SAAnB,SAA8BT,aAOlDR,EAAQkB,aAAe,CACnBd,OAAQ,qJ,oBCnCG,SAASe,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOf,EAAS,EAATA,MAOxC,OACI,0BAASI,UAAWC,IAAEW,WAAtB,UACKD,GAAS,oBAAIX,UAAWC,IAAEU,MAAjB,SAAyBA,EAAME,gBAEzC,oBAAIb,UAAWC,IAAEa,SAAjB,SACKlB,EAAMmB,KAAI,gBAXFC,EAWKC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,WAAYX,EAAnB,EAAmBA,MAAnB,OACP,qBAEIP,UAAWC,IAAEkB,KACbC,MAAO,CACHC,iBAhBHL,EAgBiCE,EAZ5C,OAAN,OAHiB,IAGFF,EAAoB,IAFZ,IAEvB,mBAQY,UAOI,sBAAMhB,UAAWC,IAAEM,MAAnB,SAA2BA,IAC3B,uBAAMP,UAAWC,IAAEiB,WAAnB,UAAgCA,EAAhC,SAPKD,WCjBd,SAASK,EAAWC,GAC/B,OAAO,oBAAIvB,UAAU,eCOV,SAASwB,IACpB,OACI,qCACI,cAACjC,EAAD,CACIC,KAAMiC,EAAKjC,KACXC,IAAKgC,EAAKhC,IACVC,SAAU+B,EAAK/B,SACfC,OAAQ8B,EAAK9B,OACbC,MAAO6B,EAAK7B,QAEhB,cAACc,EAAD,CAAYC,MAAM,eAAef,MAAO8B,IACxC,cAAChB,EAAD,CAAYd,MAAO8B,IACnB,cAACJ,EAAD,CAAYK,QAASA,O,YCdjCC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACN,EAAD,MAEJO,SAASC,eAAe,W","file":"static/js/main.7d7c82b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1VCFi\",\"description\":\"profile_description__2u_px\",\"thumb\":\"profile_thumb__26poH\",\"avatar\":\"profile_avatar__cMaX4\",\"name\":\"profile_name__2mQUA\",\"tag\":\"profile_tag__ZZbWn\",\"location\":\"profile_location__3CjnJ\",\"stats\":\"profile_stats__3rxBf\",\"statsItem\":\"profile_statsItem__1HoRO\",\"stats__item\":\"profile_stats__item__hGlg7\",\"label\":\"profile_label__2PNf_\",\"quantity\":\"profile_quantity__E0zst\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__yQ5cH\",\"title\":\"statistics_title__eV7Ce\",\"statList\":\"statistics_statList__3VvkQ\",\"item\":\"statistics_item__2APUu\",\"label\":\"statistics_label__1zIck\",\"percentage\":\"statistics_percentage__J_EN8\"};","import PropTypes from 'prop-types';\nimport s from './profile.module.css';\n\nexport default function Profile({\n    name,\n    tag,\n    location,\n    avatar,\n    stats: { followers, views, likes },\n}) {\n    return (\n        <div className={s.profile}>\n            <div className={s.description}>\n                <img src={avatar} alt={name} className={s.avatar} />\n                <p className={s.name}>{name}</p>\n                <p className={s.tag}>@{tag}</p>\n                <p className={s.location}>{location}</p>\n            </div>\n\n            <ul className={s.stats}>\n                <li className={s.statsItem}>\n                    <span className={s.label}>Followers</span>\n                    <span className={s.quantity}>{followers}</span>\n                </li>\n                <li className={s.statsItem}>\n                    <span className={s.label}>Views</span>\n                    <span className={s.quantity}>{views}</span>\n                </li>\n                <li className={s.statsItem}>\n                    <span className={s.label}>Likes</span>\n                    <span className={s.quantity}>{likes}</span>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nProfile.defaultProps = {\n    avatar: 'https://c.dns-shop.ru/thumb/st1/fit/768/768/ab24eeb9490da4496c9877b441ca41f5/277c5e84904207c75f0b14384dff4e5578f7f7e8c529667aa9bee42de87077de.png',\n};\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.exact({\n        followers: PropTypes.number.isRequired,\n        views: PropTypes.number.isRequired,\n        likes: PropTypes.number.isRequired,\n    }),\n};\n","import PropTypes from 'prop-types';\nimport s from './statistics.module.css';\n\nexport default function Statistics({ title, stats }) {\n    const addMakeColor = value => {\n        const maxColor = 244;\n        const someColorShift = 200;\n\n        return `hsl(${(value * maxColor) / 100 + someColorShift}deg 100% 50%)`;\n    };\n    return (\n        <section className={s.statistics}>\n            {title && <h2 className={s.title}>{title.toUpperCase()}</h2>}\n\n            <ul className={s.statList}>\n                {stats.map(({ id, percentage, label }) => (\n                    <li\n                        key={id}\n                        className={s.item}\n                        style={{\n                            backgroundColor: addMakeColor(percentage),\n                        }}\n                    >\n                        <span className={s.label}>{label}</span>\n                        <span className={s.percentage}>{percentage}%</span>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    );\n}\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.exact({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.oneOf(['.docx', '.pdf', '.mp3', '.psd'])\n                .isRequired,\n            percentage: PropTypes.number.isRequired,\n        }).isRequired,\n    ),\n};\n","export default function FriendList(prop) {\n    return <ul className=\"friendList\"></ul>;\n}\n","import user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\n\nimport Profile from './components/profile/Profile';\nimport Statistics from './components/statistics/Statistics';\nimport FriendList from './components/friendList/FriendList';\n\nexport default function App() {\n    return (\n        <>\n            <Profile\n                name={user.name}\n                tag={user.tag}\n                location={user.location}\n                avatar={user.avatar}\n                stats={user.stats}\n            />\n            <Statistics title=\"Upload stats\" stats={statisticalData} />\n            <Statistics stats={statisticalData} />\n            <FriendList friends={friends} />\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}